"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[863],{1916:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>d,contentTitle:()=>r,default:()=>i,frontMatter:()=>l,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"Creating_Enums","title":"Creating Enums","description":"Creating TypedEnum","source":"@site/docs/Creating_Enums.md","sourceDirName":".","slug":"/Creating_Enums","permalink":"/TypedEnum/docs/Creating_Enums","draft":false,"unlisted":false,"editUrl":"https://github.com/arythmitical/TypedEnum/edit/main/docs/Creating_Enums.md","tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"Installation","permalink":"/TypedEnum/docs/Installation"}}');var a=t(4848),u=t(8453);const l={},r="Creating Enums",d={},o=[{value:"Creating TypedEnum",id:"creating-typedenum",level:2},{value:"Type annotations",id:"type-annotations",level:2},{value:"Enums module",id:"enums-module",level:2},{value:"What&#39;s next?",id:"whats-next",level:2}];function c(n){const e={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,u.R)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.header,{children:(0,a.jsx)(e.h1,{id:"creating-enums",children:"Creating Enums"})}),"\n",(0,a.jsx)(e.h2,{id:"creating-typedenum",children:"Creating TypedEnum"}),"\n",(0,a.jsxs)(e.p,{children:["A new ",(0,a.jsx)(e.strong,{children:"TypedEnum"})," is created using ",(0,a.jsx)(e.a,{href:"../Api/TypedEnum#new",children:(0,a.jsx)(e.em,{children:(0,a.jsx)(e.code,{children:"TypedEnum.new"})})}),".\nIt accepts a ",(0,a.jsx)(e.em,{children:"constructor"})," function, that is supposed to:"]}),"\n",(0,a.jsxs)(e.ol,{children:["\n",(0,a.jsx)(e.li,{children:"create a new enum table (the one that will store items)"}),"\n",(0,a.jsxs)(e.li,{children:["add items to the enum using the provided ",(0,a.jsx)(e.em,{children:(0,a.jsx)(e.code,{children:"add"})})," function"]}),"\n"]}),"\n",(0,a.jsx)(e.p,{children:"Here's an example:"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-lua",children:'local MyEnum = TypedEnum.new(function(add)\n    return {\n        MyItem = add("MyItem", 1)\n    }\nend)\n'})}),"\n",(0,a.jsxs)(e.p,{children:["We just created a new enum named ",(0,a.jsx)(e.code,{children:"MyEnum"}),", with an item named ",(0,a.jsx)(e.code,{children:"MyItem"}),".\nNow this enum can be used anywhere:"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-lua",children:'local myValue = MyEnum.Item\nprint(myValue.Name) -- "MyItem"\n'})}),"\n",(0,a.jsxs)(e.p,{children:["This particular way of creating custom enums allows\n",(0,a.jsx)(e.a,{href:"https://luau.org/typecheck",children:"type inference engine"}),"\nto properly work, and thus gives ",(0,a.jsx)(e.strong,{children:"full"})," autocompletion support!"]}),"\n",(0,a.jsx)(e.h2,{id:"type-annotations",children:"Type annotations"}),"\n",(0,a.jsxs)(e.p,{children:["TypedEnum also provides some public\n",(0,a.jsx)(e.a,{href:"https://luau.org/typecheck",children:"type annotations"})," that you can use."]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-lua",children:'local MyEnum = TypedEnum.new(function(add)\n    return {\n        EnumItem1 = add("EnumItem1", 1),\n        EnumItem2 = add("EnumItem2", 2),\n        EnumItem3 = add("EnumItem3", 3)\n    }\nend)\n\nexport type MyEnum = TypedEnum.TypedEnumItem<number, typeof(MyEnum)>\n'})}),"\n",(0,a.jsxs)(e.p,{children:["In the code above, we defined a type ",(0,a.jsx)(e.code,{children:"MyEnum"}),". It represents all enum items\nin ",(0,a.jsx)(e.code,{children:"MyEnum"}),": ",(0,a.jsx)(e.strong,{children:(0,a.jsx)(e.code,{children:"EnumItem1"})}),", ",(0,a.jsx)(e.strong,{children:(0,a.jsx)(e.code,{children:"EnumItem2"})})," and ",(0,a.jsx)(e.strong,{children:(0,a.jsx)(e.code,{children:"EnumItem3"})}),":"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-lua",children:"local myValue: MyEnum = MyEnum.EnumItem1 -- ok\nlocal myValue: MyEnum = MyEnum.EnumItem2 -- ok\nlocal myValue: MyEnum = MyEnum.EnumItem3 -- ok\n\nlocal myValue: MyEnum = 123 -- not ok\nlocal myValue: MyEnum = Enum.AccessoryType.Hat -- not ok\nlocal myValue: MyEnum = MyEnum -- not ok\n"})}),"\n",(0,a.jsx)(e.h2,{id:"enums-module",children:"Enums module"}),"\n",(0,a.jsxs)(e.p,{children:["In general, it's a good practice to keep all static data in one place,\nand it's ",(0,a.jsx)(e.em,{children:"recommended"})," to have all enums located in a single ",(0,a.jsx)(e.em,{children:"Enums"})," module, like this:"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-lua",children:'-- Enums.luau\n\nlocal Enums = table.freeze({\n    Status = TypedEnum.new(function(add)\n        return {\n            Confusion = add("Confusion", 1),\n            Poison = add("Poison", 2)\n        }\n    end),\n})\n\nexport type Status = TypedEnum.TypedEnumItem<number, typeof(Enums.Status)>\n\nreturn Enums\n'})}),"\n",(0,a.jsx)(e.p,{children:"Now, you can use this enum from another script:"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-lua",children:"-- Example.luau\n\nlocal Enums = require(path.to.Enums)\n\nlocal myStatus: Enums.Status = Enums.Status.Confusion\n-- wowie!\n"})}),"\n",(0,a.jsx)(e.h2,{id:"whats-next",children:"What's next?"}),"\n",(0,a.jsxs)(e.p,{children:["You can check out the ",(0,a.jsx)(e.strong,{children:(0,a.jsx)(e.a,{href:"../Api",children:"API reference"})}),"\nto learn more about TypedEnum."]}),"\n",(0,a.jsx)(e.p,{children:"Happy coding!"})]})}function i(n={}){const{wrapper:e}={...(0,u.R)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(c,{...n})}):c(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>l,x:()=>r});var s=t(6540);const a={},u=s.createContext(a);function l(n){const e=s.useContext(u);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:l(n.components),s.createElement(u.Provider,{value:e},n.children)}}}]);